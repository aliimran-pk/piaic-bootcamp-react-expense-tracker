{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myvscode/piaicbootcamp/piaic-bootcamp-expense-tracker/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react'; // Import the Reducer\n\nimport AppReducer from './AppReducer'; // Create the initial state\n\nconst initialState = {\n  transactions: [{\n    id: 1,\n    description: \"Salary\",\n    transactionAmount: 1000\n  }, {\n    id: 2,\n    description: \"Gas Bill\",\n    transactionAmount: -100\n  }, {\n    id: 3,\n    description: \"Profit\",\n    transactionAmount: 2000\n  }, {\n    id: 4,\n    description: \"School Fee\",\n    transactionAmount: -1500\n  }]\n}; // Create the Global Context\n\nexport const GlobalContext = createContext(initialState); // Create a Provider for the Global Context\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state] = useReducer(AppReducer, initialState); // Delete Existing Transaction Action\n\n  function delTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  } // Add New Transaction Action\n\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      delTransaction: delTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/ubuntu/myvscode/piaicbootcamp/piaic-bootcamp-expense-tracker/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialState","transactions","id","description","transactionAmount","GlobalContext","GlobalProvider","children","state","delTransaction","dispatch","type","payload","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE,CACV;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,WAAW,EAAE,QAArB;AAA+BC,IAAAA,iBAAiB,EAAE;AAAlD,GADU,EAEV;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,WAAW,EAAE,UAArB;AAAiCC,IAAAA,iBAAiB,EAAE,CAAC;AAArD,GAFU,EAGV;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,WAAW,EAAE,QAArB;AAA+BC,IAAAA,iBAAiB,EAAE;AAAlD,GAHU,EAIV;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,WAAW,EAAE,YAArB;AAAmCC,IAAAA,iBAAiB,EAAE,CAAC;AAAvD,GAJU;AADG,CAArB,C,CASA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACG,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMM,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE5C,QAAM,CAACC,KAAD,IAAUV,UAAU,CAACC,UAAD,EAAaC,YAAb,CAA1B,CAF4C,CAI5C;;AACA,WAASS,cAAT,CAAwBP,EAAxB,EAA4B;AACxBQ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GAV2C,CAY5C;;;AACA,WAASW,cAAT,CAAwBC,WAAxB,EAAqC;AACjCJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH;;AACD,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EACzB;AACIb,MAAAA,YAAY,EAAIO,KAAK,CAACP,YAD1B;AAEIQ,MAAAA,cAAc,EAAEA,cAFpB;AAGII,MAAAA;AAHJ,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKN,QAPL,CADJ;AAWH,CA9BM","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// Import the Reducer\nimport AppReducer from './AppReducer'\n\n// Create the initial state\nconst initialState = {\n    transactions: [\n        {id: 1, description: \"Salary\", transactionAmount: 1000},\n        {id: 2, description: \"Gas Bill\", transactionAmount: -100},\n        {id: 3, description: \"Profit\", transactionAmount: 2000},\n        {id: 4, description: \"School Fee\", transactionAmount: -1500}\n    ]\n}\n\n// Create the Global Context\nexport const GlobalContext = createContext(initialState);\n\n// Create a Provider for the Global Context\nexport const GlobalProvider = ({ children }) => {\n\n    const [state] = useReducer(AppReducer, initialState)\n\n    // Delete Existing Transaction Action\n    function delTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n\n    // Add New Transaction Action\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n    return (\n        <GlobalContext.Provider value={\n            {\n                transactions:   state.transactions,\n                delTransaction: delTransaction,\n                addTransaction\n            }\n        }>\n            {children}\n        </GlobalContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}
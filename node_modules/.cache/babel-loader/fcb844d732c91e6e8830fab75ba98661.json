{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myvscode/piaicbootcamp/piaic-bootcamp-expense-tracker/src/components/AddTransaction.js\";\nimport React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nexport const AddTransaction = () => {\n  const {\n    addTransaction\n  } = useContext(GlobalContext); // Get methoed from GlobalState Provider\n\n  const [newTransDesc, setDesc] = useState('');\n  const [newTransAmount, setAmount] = useState(0);\n\n  const onFormSubmitHandler = evnt => {\n    evnt.preventDefault(); // disable page refresh\n\n    if (Number(newTransAmount) === 0) {\n      alert(\"Transaction Amount should be greater than zero\");\n      return false;\n    }\n\n    const newTransObj = {\n      transId: Math.floor(Math.random() * 100000000),\n      transDesc: newTransDesc,\n      transAmount: +newTransAmount\n    };\n    addTransaction(newTransObj); // Call methoed in the Global State\n    //Reset Values\n\n    setDesc('');\n    setAmount(0);\n    toast.configure();\n\n    const callNotify = () => {\n      toast.info('Welcome to Expense Tracker by Ali Imran (PIAIC50192)', {\n        position: toast.POSITION.TOP_CENTER\n      });\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"NEW TRANSACTION\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onFormSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Transaction Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTransDesc,\n    onChange: e => setDesc(e.target.value),\n    placeholder: \"Enter Transaction Description...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Amount\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, \" (Add + for Income & - for Expense)\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: newTransAmount,\n    onChange: e => setAmount(e.target.value),\n    placeholder: \"Enter Transaction Amount...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"ADD\")));\n};","map":{"version":3,"sources":["/home/ubuntu/myvscode/piaicbootcamp/piaic-bootcamp-expense-tracker/src/components/AddTransaction.js"],"names":["React","useState","useContext","GlobalContext","AddTransaction","addTransaction","newTransDesc","setDesc","newTransAmount","setAmount","onFormSubmitHandler","evnt","preventDefault","Number","alert","newTransObj","transId","Math","floor","random","transDesc","transAmount","toast","configure","callNotify","info","position","POSITION","TOP_CENTER","e","target","value"],"mappings":";AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAElC,QAAM;AAAEC,IAAAA;AAAF,MAAqBH,UAAU,CAACC,aAAD,CAArC,CAFkC,CAEoB;;AAEtD,QAAM,CAACG,YAAD,EAAeC,OAAf,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,cAAD,EAAiBC,SAAjB,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;;AAEE,QAAMS,mBAAmB,GAAGC,IAAI,IAAI;AACpCA,IAAAA,IAAI,CAACC,cAAL,GADoC,CACb;;AAEvB,QAAIC,MAAM,CAACL,cAAD,CAAN,KAA2B,CAA/B,EAAkC;AAChCM,MAAAA,KAAK,CAAC,gDAAD,CAAL;AACA,aAAO,KAAP;AACD;;AAED,UAAMC,WAAW,GAAG;AAClBC,MAAAA,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CADS;AAElBC,MAAAA,SAAS,EAAEd,YAFO;AAGlBe,MAAAA,WAAW,EAAE,CAACb;AAHI,KAApB;AAMAH,IAAAA,cAAc,CAACU,WAAD,CAAd,CAdoC,CAcP;AAE7B;;AACAR,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,CAAD,CAAT;AAEAa,IAAAA,KAAK,CAACC,SAAN;;AAEF,UAAMC,UAAU,GAAG,MAAM;AACzBF,MAAAA,KAAK,CAACG,IAAN,CAAW,sDAAX,EAAmE;AAACC,QAAAA,QAAQ,EAAEJ,KAAK,CAACK,QAAN,CAAeC;AAA1B,OAAnE;AACD,KAFC;AAIC,GA1BC;;AA4BF,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAGE;AAAM,IAAA,QAAQ,EAAElB,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEJ,YAA1B;AAAwC,IAAA,QAAQ,EAAGuB,CAAD,IAAOtB,OAAO,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhE;AAAkF,IAAA,WAAW,EAAC,kCAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAA9B,CADF,eAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEvB,cAA5B;AAA4C,IAAA,QAAQ,EAAGqB,CAAD,IAAOpB,SAAS,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtE;AAAwF,IAAA,WAAW,EAAC,6BAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eASE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,CAHF,CADF;AAiBD,CApDM","sourcesContent":["\nimport React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n\n  const { addTransaction } = useContext(GlobalContext); // Get methoed from GlobalState Provider\n\n  const [newTransDesc, setDesc]     = useState('');\n  const [newTransAmount, setAmount] = useState(0);\n\n    const onFormSubmitHandler = evnt => {\n    evnt.preventDefault(); // disable page refresh\n\n    if (Number(newTransAmount) === 0) {\n      alert(\"Transaction Amount should be greater than zero\");\n      return false;\n    }\n\n    const newTransObj = {\n      transId: Math.floor(Math.random() * 100000000),\n      transDesc: newTransDesc,\n      transAmount: +newTransAmount\n    }\n\n    addTransaction(newTransObj); // Call methoed in the Global State\n    \n    //Reset Values\n    setDesc('');\n    setAmount(0)\n\n    toast.configure()\n\n  const callNotify = () => {\n  toast.info('Welcome to Expense Tracker by Ali Imran (PIAIC50192)', {position: toast.POSITION.TOP_CENTER})\n}\n\n  }\n\n  return (\n    <>\n      <h3>NEW TRANSACTION</h3>\n      \n      <form onSubmit={onFormSubmitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Transaction Name</label>\n          <input type=\"text\" value={newTransDesc} onChange={(e) => setDesc(e.target.value)} placeholder=\"Enter Transaction Description...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">Amount<span> (Add + for Income & - for Expense)</span></label> \n          <input type=\"number\" value={newTransAmount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter Transaction Amount...\" />\n        </div>\n        <button className=\"btn\">ADD</button>\n      </form>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}
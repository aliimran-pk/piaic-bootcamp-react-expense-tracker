{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/myvscode/piaicbootcamp/piaic-bootcamp-expense-tracker/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react'; // Import the Reducer\n\nimport AppReducer from './AppReducer'; // Create the initial state\n\nconst initialTransactions = [{\n  id: 1,\n  description: \"Salary\",\n  transactionAmount: 7000\n}, {\n  id: 2,\n  description: \"Gas Bill\",\n  transactionAmount: -100\n}, {\n  id: 3,\n  description: \"Profit\",\n  transactionAmount: 2000\n}, {\n  id: 4,\n  description: \"School Fee\",\n  transactionAmount: -1500\n}]; // Create the Global Context\n\nexport const GlobalState = createContext(initialTransactions); // Create a Provider for the Global Context\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialTransactions); // Delete Existing Transaction Action\n\n  function delTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  } // Add New Transaction Action\n\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: initialTransactions,\n      delTransaction: delTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/ubuntu/myvscode/piaicbootcamp/piaic-bootcamp-expense-tracker/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","initialTransactions","id","description","transactionAmount","GlobalState","GlobalProvider","children","state","dispatch","delTransaction","type","payload","addTransaction","transaction","transactions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;;AACA,MAAMC,mBAAmB,GAAI,CACrB;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,WAAW,EAAE,QAArB;AAA+BC,EAAAA,iBAAiB,EAAE;AAAlD,CADqB,EAErB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,WAAW,EAAE,UAArB;AAAiCC,EAAAA,iBAAiB,EAAE,CAAC;AAArD,CAFqB,EAGrB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,WAAW,EAAE,QAArB;AAA+BC,EAAAA,iBAAiB,EAAE;AAAlD,CAHqB,EAIrB;AAACF,EAAAA,EAAE,EAAE,CAAL;AAAQC,EAAAA,WAAW,EAAE,YAArB;AAAmCC,EAAAA,iBAAiB,EAAE,CAAC;AAAvD,CAJqB,CAA7B,C,CAOA;;AACA,OAAO,MAAMC,WAAW,GAAGP,aAAa,CAACG,mBAAD,CAAjC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACC,UAAD,EAAaC,mBAAb,CAApC,CAF4C,CAI5C;;AACA,WAASS,cAAT,CAAwBR,EAAxB,EAA4B;AACxBO,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GAV2C,CAY5C;;;AACA,WAASW,cAAT,CAAwBC,WAAxB,EAAqC;AACjCL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAE,iBADD;AAELC,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH;;AACD,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EACzB;AACIC,MAAAA,YAAY,EAAId,mBADpB;AAEIS,MAAAA,cAAc,EAAEA,cAFpB;AAGIG,MAAAA;AAHJ,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKN,QAPL,CADJ;AAWH,CA9BM","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n// Import the Reducer\nimport AppReducer from './AppReducer'\n\n// Create the initial state\nconst initialTransactions  = [\n        {id: 1, description: \"Salary\", transactionAmount: 7000},\n        {id: 2, description: \"Gas Bill\", transactionAmount: -100},\n        {id: 3, description: \"Profit\", transactionAmount: 2000},\n        {id: 4, description: \"School Fee\", transactionAmount: -1500}\n    ]\n\n// Create the Global Context\nexport const GlobalState = createContext(initialTransactions);\n\n// Create a Provider for the Global Context\nexport const GlobalProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(AppReducer, initialTransactions);\n\n    // Delete Existing Transaction Action\n    function delTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        });\n    }\n\n    // Add New Transaction Action\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n    return (\n        <GlobalContext.Provider value={\n            {\n                transactions:   initialTransactions,\n                delTransaction: delTransaction,\n                addTransaction\n            }\n        }>\n            {children}\n        </GlobalContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}